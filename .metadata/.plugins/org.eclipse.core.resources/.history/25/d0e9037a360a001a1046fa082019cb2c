package leetcode;

public class Interleaving_String {

	
	 private int lcs(String X, String Y) {
	        int x = X.length();
	        int y = Y.length();
	        int[][] dp = new int[x+1][y+1];

	        for (int i=0; i<=x; i++) {
	            for (int j=0; j<=y; j++) {
	                if (i == 0 || j == 0) {
	                    dp[i][j] = 0;
	                    continue;
	                }

	                if (X.charAt(i-1) == Y.charAt(j-1)) {
	                    dp[i][j] = 1 + dp[i-1][j-1];
	                } else {
	                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
	                }
	            }
	        }

	        return dp[x][y];

	    }

	    public boolean isInterleave(String A, String B, String C) {
	        return (lcs(A, C) == A.length()) && (lcs(B, C) == B.length());
	    }
}
