package ninja;

import java.util.Comparator;
import java.util.HashMap;
import java.util.PriorityQueue;
import java.util.TreeMap;


public class Get_Mode_Array_Updates {
	
	class Node{
		int key;
		int freq;
		Node(int key,int freq){
			this.key=key;
			this.freq=freq;
		}
	}
	
	public int[] getMode(int[] A, int[][] B) {
		int n=A.length;
		HashMap<Integer, Integer > count= new HashMap<>();
		PriorityQueue<Node> pq=new PriorityQueue<Node>((a,b)-> {
			if(a.freq==b.freq) {
				return a.key-b.key;
			}
			return b.freq-a.freq;
		});
		for(int i:A) 
			count.put(i,count.getOrDefault(i, 0)+1);
		for(int key:count.keySet()) {
			int fre=count.get(key);
			pq.add(new Node(key, fre));
			
		}
		
    }
}
