

package leetcode;

import java.util.Arrays;

public class Longest_Increasing_Subsequence {
	
	public int lengthOfLIS(int[] nums) {
        int[] dp = new int[nums.length];
       int len = 0;

       for(int x : nums) {
           int i = Arrays.binarySearch(dp, 0, len, x);
           //System.out.println(i);
           if(i < 0) i = -(i + 1);
           dp[i] = x;
           if(i == len) len++;
       }

       return len;
   }
	
	/*
	
	public int lengthOfLIS(int[] nums) {
        if(nums == null || nums.length==0)
            return 0;
        int[] dp = new int[nums.length];
        Arrays.fill(dp,1);
        int result = 1;
        for(int i=1; i<nums.length; i++){
            for(int j=0; j<i; j++){
                if(nums[i]>nums[j]){
                    dp[i]=Math.max(dp[j]+1,dp[i]);
                }
            }
            result=Math.max(result, dp[i]);
        }
        return result;
        
    }
    */

}
